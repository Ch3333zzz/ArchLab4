name: sort-numbers-5
config: 
  lenient_log: true
source:
  language: lisp
  code: |
    (setq n 0)
    (setq val 0)
    (setq building 0)

    (setq ch (read))
    (while (!= ch 0)
      (if (= ch 10)
        (while (= building 1)
          (if (= n 0) (setq a0 val)
            (if (= n 1) (setq a1 val)
              (if (= n 2) (setq a2 val)
                (if (= n 3) (setq a3 val)
                  (setq a4 val)))) )
          (setq n (+ n 1))
          (setq building 0)
          (setq ch 0)
        )
        (if (= ch 32)
          (while (= building 1)
            (if (= n 0) (setq a0 val)
              (if (= n 1) (setq a1 val)
                (if (= n 2) (setq a2 val)
                  (if (= n 3) (setq a3 val)
                    (setq a4 val)))) )
            (setq n (+ n 1))
            (setq val 0)
            (setq building 0)
          )
          (progn
            (setq val (+ (* val 10) (- ch 48)))
            (setq building 1)
          )
        )
      )
      (if (!= ch 0) (setq ch (read)))
    )

    (setq i 0)
    (while (< i n)
      (setq j 0)
      (while (< j (- n i 1))
        (setq x (if (= j 0) a0 (if (= j 1) a1 (if (= j 2) a2 (if (= j 3) a3 a4)))))
        (setq j1 (+ j 1))
        (setq y (if (= j1 0) a0 (if (= j1 1) a1 (if (= j1 2) a2 (if (= j1 3) a3 a4)))))
        (if (> x y)
          (progn
            (if (= j 0) (setq a0 y)
              (if (= j 1) (setq a1 y)
                (if (= j 2) (setq a2 y)
                  (if (= j 3) (setq a3 y)
                    (setq a4 y)))) )
            (if (= j1 0) (setq a0 x)
              (if (= j1 1) (setq a1 x)
                (if (= j1 2) (setq a2 x)
                  (if (= j1 3) (setq a3 x)
                    (setq a4 x)))) )
          )
        )
        (setq j (+ j 1))
      )
      (setq i (+ i 1))
    )

    (setq k 0)
    (while (< k n)
      (setq v (if (= k 0) a0 (if (= k 1) a1 (if (= k 2) a2 (if (= k 3) a3 a4)))))
      (print v)
      (if (< (+ k 1) n) (out 32))
      (setq k (+ k 1))
    )
    (out 10)
input_schedule:
  - [10, "3"]
  - [30, " "]
  - [50, "1"]
  - [70, " "]
  - [90, "4"]
  - [110, " "]
  - [130, "2"]
  - [150, "\n"]
expect:
  output: |
    1 2 3 4
  state: stopped
  error: false
  out_code: !!binary |
    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
  out_code_hex: |-
    0 - 0A00000000 - LOAD_IMM 0
    5 - 1600040000 - STORE_MEM 1024
    10 - 0A00000000 - LOAD_IMM 0
    15 - 1601040000 - STORE_MEM 1025
    20 - 0A00000000 - LOAD_IMM 0
    25 - 1602040000 - STORE_MEM 1026
    30 - 4700000000 - READ
    35 - 1603040000 - STORE_MEM 1027
    40 - 1503040000 - LOAD_MEM 1027
    45 - 3C00000000 - PUSH_IMM 0
    50 - 0A00000000 - LOAD_IMM 0
    55 - 5B02000000 - CMP_POP 2
    60 - 1FD5020000 - BEQZ 725
    65 - 1503040000 - LOAD_MEM 1027
    70 - 3C00000000 - PUSH_IMM 0
    75 - 0A0A000000 - LOAD_IMM 10
    80 - 5B01000000 - CMP_POP 1
    85 - 1F54010000 - BEQZ 340
    90 - 1502040000 - LOAD_MEM 1026
    95 - 3C00000000 - PUSH_IMM 0
    100 - 0A01000000 - LOAD_IMM 1
    105 - 5B01000000 - CMP_POP 1
    110 - 1F4F010000 - BEQZ 335
    115 - 1500040000 - LOAD_MEM 1024
    120 - 3C00000000 - PUSH_IMM 0
    125 - 0A00000000 - LOAD_IMM 0
    130 - 5B01000000 - CMP_POP 1
    135 - 1F9B000000 - BEQZ 155
    140 - 1501040000 - LOAD_MEM 1025
    145 - 1604040000 - STORE_MEM 1028
    150 - 1E1D010000 - JMP 285
    155 - 1500040000 - LOAD_MEM 1024
    160 - 3C00000000 - PUSH_IMM 0
    165 - 0A01000000 - LOAD_IMM 1
    170 - 5B01000000 - CMP_POP 1
    175 - 1FC3000000 - BEQZ 195
    180 - 1501040000 - LOAD_MEM 1025
    185 - 1605040000 - STORE_MEM 1029
    190 - 1E1D010000 - JMP 285
    195 - 1500040000 - LOAD_MEM 1024
    200 - 3C00000000 - PUSH_IMM 0
    205 - 0A02000000 - LOAD_IMM 2
    210 - 5B01000000 - CMP_POP 1
    215 - 1FEB000000 - BEQZ 235
    220 - 1501040000 - LOAD_MEM 1025
    225 - 1606040000 - STORE_MEM 1030
    230 - 1E1D010000 - JMP 285
    235 - 1500040000 - LOAD_MEM 1024
    240 - 3C00000000 - PUSH_IMM 0
    245 - 0A03000000 - LOAD_IMM 3
    250 - 5B01000000 - CMP_POP 1
    255 - 1F13010000 - BEQZ 275
    260 - 1501040000 - LOAD_MEM 1025
    265 - 1607040000 - STORE_MEM 1031
    270 - 1E1D010000 - JMP 285
    275 - 1501040000 - LOAD_MEM 1025
    280 - 1608040000 - STORE_MEM 1032
    285 - 1500040000 - LOAD_MEM 1024
    290 - 3C00000000 - PUSH_IMM 0
    295 - 0A01000000 - LOAD_IMM 1
    300 - 5A01000000 - BINOP_POP 1
    305 - 1600040000 - STORE_MEM 1024
    310 - 0A00000000 - LOAD_IMM 0
    315 - 1602040000 - STORE_MEM 1026
    320 - 0A00000000 - LOAD_IMM 0
    325 - 1603040000 - STORE_MEM 1027
    330 - 1E5A000000 - JMP 90
    335 - 1EA8020000 - JMP 680
    340 - 1503040000 - LOAD_MEM 1027
    345 - 3C00000000 - PUSH_IMM 0
    350 - 0A20000000 - LOAD_IMM 32
    355 - 5B01000000 - CMP_POP 1
    360 - 1F67020000 - BEQZ 615
    365 - 1502040000 - LOAD_MEM 1026
    370 - 3C00000000 - PUSH_IMM 0
    375 - 0A01000000 - LOAD_IMM 1
    380 - 5B01000000 - CMP_POP 1
    385 - 1F62020000 - BEQZ 610
    390 - 1500040000 - LOAD_MEM 1024
    395 - 3C00000000 - PUSH_IMM 0
    400 - 0A00000000 - LOAD_IMM 0
    405 - 5B01000000 - CMP_POP 1
    410 - 1FAE010000 - BEQZ 430
    415 - 1501040000 - LOAD_MEM 1025
    420 - 1604040000 - STORE_MEM 1028
    425 - 1E30020000 - JMP 560
    430 - 1500040000 - LOAD_MEM 1024
    435 - 3C00000000 - PUSH_IMM 0
    440 - 0A01000000 - LOAD_IMM 1
    445 - 5B01000000 - CMP_POP 1
    450 - 1FD6010000 - BEQZ 470
    455 - 1501040000 - LOAD_MEM 1025
    460 - 1605040000 - STORE_MEM 1029
    465 - 1E30020000 - JMP 560
    470 - 1500040000 - LOAD_MEM 1024
    475 - 3C00000000 - PUSH_IMM 0
    480 - 0A02000000 - LOAD_IMM 2
    485 - 5B01000000 - CMP_POP 1
    490 - 1FFE010000 - BEQZ 510
    495 - 1501040000 - LOAD_MEM 1025
    500 - 1606040000 - STORE_MEM 1030
    505 - 1E30020000 - JMP 560
    510 - 1500040000 - LOAD_MEM 1024
    515 - 3C00000000 - PUSH_IMM 0
    520 - 0A03000000 - LOAD_IMM 3
    525 - 5B01000000 - CMP_POP 1
    530 - 1F26020000 - BEQZ 550
    535 - 1501040000 - LOAD_MEM 1025
    540 - 1607040000 - STORE_MEM 1031
    545 - 1E30020000 - JMP 560
    550 - 1501040000 - LOAD_MEM 1025
    555 - 1608040000 - STORE_MEM 1032
    560 - 1500040000 - LOAD_MEM 1024
    565 - 3C00000000 - PUSH_IMM 0
    570 - 0A01000000 - LOAD_IMM 1
    575 - 5A01000000 - BINOP_POP 1
    580 - 1600040000 - STORE_MEM 1024
    585 - 0A00000000 - LOAD_IMM 0
    590 - 1601040000 - STORE_MEM 1025
    595 - 0A00000000 - LOAD_IMM 0
    600 - 1602040000 - STORE_MEM 1026
    605 - 1E6D010000 - JMP 365
    610 - 1EA8020000 - JMP 680
    615 - 1501040000 - LOAD_MEM 1025
    620 - 3C00000000 - PUSH_IMM 0
    625 - 0A0A000000 - LOAD_IMM 10
    630 - 5A03000000 - BINOP_POP 3
    635 - 3C00000000 - PUSH_IMM 0
    640 - 1503040000 - LOAD_MEM 1027
    645 - 3C00000000 - PUSH_IMM 0
    650 - 0A30000000 - LOAD_IMM 48
    655 - 5A02000000 - BINOP_POP 2
    660 - 5A01000000 - BINOP_POP 1
    665 - 1601040000 - STORE_MEM 1025
    670 - 0A01000000 - LOAD_IMM 1
    675 - 1602040000 - STORE_MEM 1026
    680 - 1503040000 - LOAD_MEM 1027
    685 - 3C00000000 - PUSH_IMM 0
    690 - 0A00000000 - LOAD_IMM 0
    695 - 5B02000000 - CMP_POP 2
    700 - 1FD0020000 - BEQZ 720
    705 - 4700000000 - READ
    710 - 1603040000 - STORE_MEM 1027
    715 - 1ED0020000 - JMP 720
    720 - 1E28000000 - JMP 40
    725 - 0A00000000 - LOAD_IMM 0
    730 - 1609040000 - STORE_MEM 1033
    735 - 1509040000 - LOAD_MEM 1033
    740 - 3C00000000 - PUSH_IMM 0
    745 - 1500040000 - LOAD_MEM 1024
    750 - 5B03000000 - CMP_POP 3
    755 - 1F2C060000 - BEQZ 1580
    760 - 0A00000000 - LOAD_IMM 0
    765 - 160A040000 - STORE_MEM 1034
    770 - 150A040000 - LOAD_MEM 1034
    775 - 3C00000000 - PUSH_IMM 0
    780 - 1500040000 - LOAD_MEM 1024
    785 - 3C00000000 - PUSH_IMM 0
    790 - 1509040000 - LOAD_MEM 1033
    795 - 5A02000000 - BINOP_POP 2
    800 - 3C00000000 - PUSH_IMM 0
    805 - 0A01000000 - LOAD_IMM 1
    810 - 5A02000000 - BINOP_POP 2
    815 - 5B03000000 - CMP_POP 3
    820 - 1F0E060000 - BEQZ 1550
    825 - 150A040000 - LOAD_MEM 1034
    830 - 3C00000000 - PUSH_IMM 0
    835 - 0A00000000 - LOAD_IMM 0
    840 - 5B01000000 - CMP_POP 1
    845 - 1F5C030000 - BEQZ 860
    850 - 1504040000 - LOAD_MEM 1028
    855 - 1ECA030000 - JMP 970
    860 - 150A040000 - LOAD_MEM 1034
    865 - 3C00000000 - PUSH_IMM 0
    870 - 0A01000000 - LOAD_IMM 1
    875 - 5B01000000 - CMP_POP 1
    880 - 1F7F030000 - BEQZ 895
    885 - 1505040000 - LOAD_MEM 1029
    890 - 1ECA030000 - JMP 970
    895 - 150A040000 - LOAD_MEM 1034
    900 - 3C00000000 - PUSH_IMM 0
    905 - 0A02000000 - LOAD_IMM 2
    910 - 5B01000000 - CMP_POP 1
    915 - 1FA2030000 - BEQZ 930
    920 - 1506040000 - LOAD_MEM 1030
    925 - 1ECA030000 - JMP 970
    930 - 150A040000 - LOAD_MEM 1034
    935 - 3C00000000 - PUSH_IMM 0
    940 - 0A03000000 - LOAD_IMM 3
    945 - 5B01000000 - CMP_POP 1
    950 - 1FC5030000 - BEQZ 965
    955 - 1507040000 - LOAD_MEM 1031
    960 - 1ECA030000 - JMP 970
    965 - 1508040000 - LOAD_MEM 1032
    970 - 160B040000 - STORE_MEM 1035
    975 - 150A040000 - LOAD_MEM 1034
    980 - 3C00000000 - PUSH_IMM 0
    985 - 0A01000000 - LOAD_IMM 1
    990 - 5A01000000 - BINOP_POP 1
    995 - 160C040000 - STORE_MEM 1036
    1000 - 150C040000 - LOAD_MEM 1036
    1005 - 3C00000000 - PUSH_IMM 0
    1010 - 0A00000000 - LOAD_IMM 0
    1015 - 5B01000000 - CMP_POP 1
    1020 - 1F0B040000 - BEQZ 1035
    1025 - 1504040000 - LOAD_MEM 1028
    1030 - 1E79040000 - JMP 1145
    1035 - 150C040000 - LOAD_MEM 1036
    1040 - 3C00000000 - PUSH_IMM 0
    1045 - 0A01000000 - LOAD_IMM 1
    1050 - 5B01000000 - CMP_POP 1
    1055 - 1F2E040000 - BEQZ 1070
    1060 - 1505040000 - LOAD_MEM 1029
    1065 - 1E79040000 - JMP 1145
    1070 - 150C040000 - LOAD_MEM 1036
    1075 - 3C00000000 - PUSH_IMM 0
    1080 - 0A02000000 - LOAD_IMM 2
    1085 - 5B01000000 - CMP_POP 1
    1090 - 1F51040000 - BEQZ 1105
    1095 - 1506040000 - LOAD_MEM 1030
    1100 - 1E79040000 - JMP 1145
    1105 - 150C040000 - LOAD_MEM 1036
    1110 - 3C00000000 - PUSH_IMM 0
    1115 - 0A03000000 - LOAD_IMM 3
    1120 - 5B01000000 - CMP_POP 1
    1125 - 1F74040000 - BEQZ 1140
    1130 - 1507040000 - LOAD_MEM 1031
    1135 - 1E79040000 - JMP 1145
    1140 - 1508040000 - LOAD_MEM 1032
    1145 - 160D040000 - STORE_MEM 1037
    1150 - 150B040000 - LOAD_MEM 1035
    1155 - 3C00000000 - PUSH_IMM 0
    1160 - 150D040000 - LOAD_MEM 1037
    1165 - 5B05000000 - CMP_POP 5
    1170 - 1FF0050000 - BEQZ 1520
    1175 - 150A040000 - LOAD_MEM 1034
    1180 - 3C00000000 - PUSH_IMM 0
    1185 - 0A00000000 - LOAD_IMM 0
    1190 - 5B01000000 - CMP_POP 1
    1195 - 1FBF040000 - BEQZ 1215
    1200 - 150D040000 - LOAD_MEM 1037
    1205 - 1604040000 - STORE_MEM 1028
    1210 - 1E41050000 - JMP 1345
    1215 - 150A040000 - LOAD_MEM 1034
    1220 - 3C00000000 - PUSH_IMM 0
    1225 - 0A01000000 - LOAD_IMM 1
    1230 - 5B01000000 - CMP_POP 1
    1235 - 1FE7040000 - BEQZ 1255
    1240 - 150D040000 - LOAD_MEM 1037
    1245 - 1605040000 - STORE_MEM 1029
    1250 - 1E41050000 - JMP 1345
    1255 - 150A040000 - LOAD_MEM 1034
    1260 - 3C00000000 - PUSH_IMM 0
    1265 - 0A02000000 - LOAD_IMM 2
    1270 - 5B01000000 - CMP_POP 1
    1275 - 1F0F050000 - BEQZ 1295
    1280 - 150D040000 - LOAD_MEM 1037
    1285 - 1606040000 - STORE_MEM 1030
    1290 - 1E41050000 - JMP 1345
    1295 - 150A040000 - LOAD_MEM 1034
    1300 - 3C00000000 - PUSH_IMM 0
    1305 - 0A03000000 - LOAD_IMM 3
    1310 - 5B01000000 - CMP_POP 1
    1315 - 1F37050000 - BEQZ 1335
    1320 - 150D040000 - LOAD_MEM 1037
    1325 - 1607040000 - STORE_MEM 1031
    1330 - 1E41050000 - JMP 1345
    1335 - 150D040000 - LOAD_MEM 1037
    1340 - 1608040000 - STORE_MEM 1032
    1345 - 150C040000 - LOAD_MEM 1036
    1350 - 3C00000000 - PUSH_IMM 0
    1355 - 0A00000000 - LOAD_IMM 0
    1360 - 5B01000000 - CMP_POP 1
    1365 - 1F69050000 - BEQZ 1385
    1370 - 150B040000 - LOAD_MEM 1035
    1375 - 1604040000 - STORE_MEM 1028
    1380 - 1EEB050000 - JMP 1515
    1385 - 150C040000 - LOAD_MEM 1036
    1390 - 3C00000000 - PUSH_IMM 0
    1395 - 0A01000000 - LOAD_IMM 1
    1400 - 5B01000000 - CMP_POP 1
    1405 - 1F91050000 - BEQZ 1425
    1410 - 150B040000 - LOAD_MEM 1035
    1415 - 1605040000 - STORE_MEM 1029
    1420 - 1EEB050000 - JMP 1515
    1425 - 150C040000 - LOAD_MEM 1036
    1430 - 3C00000000 - PUSH_IMM 0
    1435 - 0A02000000 - LOAD_IMM 2
    1440 - 5B01000000 - CMP_POP 1
    1445 - 1FB9050000 - BEQZ 1465
    1450 - 150B040000 - LOAD_MEM 1035
    1455 - 1606040000 - STORE_MEM 1030
    1460 - 1EEB050000 - JMP 1515
    1465 - 150C040000 - LOAD_MEM 1036
    1470 - 3C00000000 - PUSH_IMM 0
    1475 - 0A03000000 - LOAD_IMM 3
    1480 - 5B01000000 - CMP_POP 1
    1485 - 1FE1050000 - BEQZ 1505
    1490 - 150B040000 - LOAD_MEM 1035
    1495 - 1607040000 - STORE_MEM 1031
    1500 - 1EEB050000 - JMP 1515
    1505 - 150B040000 - LOAD_MEM 1035
    1510 - 1608040000 - STORE_MEM 1032
    1515 - 1EF0050000 - JMP 1520
    1520 - 150A040000 - LOAD_MEM 1034
    1525 - 3C00000000 - PUSH_IMM 0
    1530 - 0A01000000 - LOAD_IMM 1
    1535 - 5A01000000 - BINOP_POP 1
    1540 - 160A040000 - STORE_MEM 1034
    1545 - 1E02030000 - JMP 770
    1550 - 1509040000 - LOAD_MEM 1033
    1555 - 3C00000000 - PUSH_IMM 0
    1560 - 0A01000000 - LOAD_IMM 1
    1565 - 5A01000000 - BINOP_POP 1
    1570 - 1609040000 - STORE_MEM 1033
    1575 - 1EDF020000 - JMP 735
    1580 - 0A00000000 - LOAD_IMM 0
    1585 - 160E040000 - STORE_MEM 1038
    1590 - 150E040000 - LOAD_MEM 1038
    1595 - 3C00000000 - PUSH_IMM 0
    1600 - 1500040000 - LOAD_MEM 1024
    1605 - 5B03000000 - CMP_POP 3
    1610 - 1F44070000 - BEQZ 1860
    1615 - 150E040000 - LOAD_MEM 1038
    1620 - 3C00000000 - PUSH_IMM 0
    1625 - 0A00000000 - LOAD_IMM 0
    1630 - 5B01000000 - CMP_POP 1
    1635 - 1F72060000 - BEQZ 1650
    1640 - 1504040000 - LOAD_MEM 1028
    1645 - 1EE0060000 - JMP 1760
    1650 - 150E040000 - LOAD_MEM 1038
    1655 - 3C00000000 - PUSH_IMM 0
    1660 - 0A01000000 - LOAD_IMM 1
    1665 - 5B01000000 - CMP_POP 1
    1670 - 1F95060000 - BEQZ 1685
    1675 - 1505040000 - LOAD_MEM 1029
    1680 - 1EE0060000 - JMP 1760
    1685 - 150E040000 - LOAD_MEM 1038
    1690 - 3C00000000 - PUSH_IMM 0
    1695 - 0A02000000 - LOAD_IMM 2
    1700 - 5B01000000 - CMP_POP 1
    1705 - 1FB8060000 - BEQZ 1720
    1710 - 1506040000 - LOAD_MEM 1030
    1715 - 1EE0060000 - JMP 1760
    1720 - 150E040000 - LOAD_MEM 1038
    1725 - 3C00000000 - PUSH_IMM 0
    1730 - 0A03000000 - LOAD_IMM 3
    1735 - 5B01000000 - CMP_POP 1
    1740 - 1FDB060000 - BEQZ 1755
    1745 - 1507040000 - LOAD_MEM 1031
    1750 - 1EE0060000 - JMP 1760
    1755 - 1508040000 - LOAD_MEM 1032
    1760 - 160F040000 - STORE_MEM 1039
    1765 - 150F040000 - LOAD_MEM 1039
    1770 - 4600000000 - PRINT
    1775 - 150E040000 - LOAD_MEM 1038
    1780 - 3C00000000 - PUSH_IMM 0
    1785 - 0A01000000 - LOAD_IMM 1
    1790 - 5A01000000 - BINOP_POP 1
    1795 - 3C00000000 - PUSH_IMM 0
    1800 - 1500040000 - LOAD_MEM 1024
    1805 - 5B03000000 - CMP_POP 3
    1810 - 1F26070000 - BEQZ 1830
    1815 - 0A20000000 - LOAD_IMM 32
    1820 - 16F1FF0000 - STORE_MEM 65521
    1825 - 1E26070000 - JMP 1830
    1830 - 150E040000 - LOAD_MEM 1038
    1835 - 3C00000000 - PUSH_IMM 0
    1840 - 0A01000000 - LOAD_IMM 1
    1845 - 5A01000000 - BINOP_POP 1
    1850 - 160E040000 - STORE_MEM 1038
    1855 - 1E36060000 - JMP 1590
    1860 - 0A0A000000 - LOAD_IMM 10
    1865 - 16F1FF0000 - STORE_MEM 65521
    1870 - 0100000000 - HALT
  out_log: |
    DEBUG root:processor.py:137 Warning: data section uses 1040 words but string_pool_cells=1024. Some static strings may live outside the pool and won't be treated as pstr by PRINT.
    DEBUG root:processor.py:309 Datapath.schedule_input called, 8 events attached
    DEBUG root:processor.py:664 READ: no data -> retrying next tick
    DEBUG root:processor.py:664 READ: no data -> retrying next tick
    DEBUG root:processor.py:664 READ: no data -> retrying next tick
    DEBUG root:processor.py:664 READ: no data -> retrying next tick
    DEBUG root:processor.py:255 [MMIO IN] input cell set to 51
    DEBUG root:processor.py:370 [tick 10] input arrived: '3' (source=IN)
    DEBUG root:processor.py:376 [tick 10] ** INTERRUPT (IN) -> vector None **
    DEBUG root:processor.py:437 No interruption_vector set -> ignore interrupt
    DEBUG root:processor.py:675 READ: got 51 ('3')
    DEBUG root:processor.py:262 [MMIO IN] consumed 51
    DEBUG root:processor.py:255 [MMIO IN] input cell set to 32
    DEBUG root:processor.py:370 [tick 30] input arrived: ' ' (source=IN)
    DEBUG root:processor.py:675 READ: got 32 (' ')
    DEBUG root:processor.py:262 [MMIO IN] consumed 32
    DEBUG root:processor.py:255 [MMIO IN] input cell set to 49
    DEBUG root:processor.py:370 [tick 50] input arrived: '1' (source=IN)
    DEBUG root:processor.py:255 [MMIO IN] input cell set to 32
    DEBUG root:processor.py:370 [tick 70] input arrived: ' ' (source=IN)
    DEBUG root:processor.py:255 [MMIO IN] input cell set to 52
    DEBUG root:processor.py:370 [tick 90] input arrived: '4' (source=IN)
    DEBUG root:processor.py:675 READ: got 49 ('1')
    DEBUG root:processor.py:262 [MMIO IN] consumed 49
    DEBUG root:processor.py:255 [MMIO IN] input cell set to 32
    DEBUG root:processor.py:370 [tick 110] input arrived: ' ' (source=IN)
    DEBUG root:processor.py:255 [MMIO IN] input cell set to 50
    DEBUG root:processor.py:370 [tick 130] input arrived: '2' (source=IN)
    DEBUG root:processor.py:675 READ: got 32 (' ')
    DEBUG root:processor.py:262 [MMIO IN] consumed 32
    DEBUG root:processor.py:255 [MMIO IN] input cell set to 10
    DEBUG root:processor.py:370 [tick 150] input arrived: '\n' (source=IN)
    DEBUG root:processor.py:675 READ: got 52 ('4')
    DEBUG root:processor.py:262 [MMIO IN] consumed 52
    DEBUG root:processor.py:675 READ: got 32 (' ')
    DEBUG root:processor.py:262 [MMIO IN] consumed 32
    DEBUG root:processor.py:675 READ: got 50 ('2')
    DEBUG root:processor.py:262 [MMIO IN] consumed 50
    DEBUG root:processor.py:675 READ: got 10 ('
    ')
    DEBUG root:processor.py:262 [MMIO IN] consumed 10
    DEBUG root:processor.py:655 PRINT: numeric -> 1
    DEBUG root:processor.py:241 [MMIO OUT] wrote 49 -> char: 1
    DEBUG root:processor.py:241 [MMIO OUT] wrote 32 -> char:  
    DEBUG root:processor.py:655 PRINT: numeric -> 2
    DEBUG root:processor.py:241 [MMIO OUT] wrote 50 -> char: 2
    DEBUG root:processor.py:241 [MMIO OUT] wrote 32 -> char:  
    DEBUG root:processor.py:655 PRINT: numeric -> 3
    DEBUG root:processor.py:241 [MMIO OUT] wrote 51 -> char: 3
    DEBUG root:processor.py:241 [MMIO OUT] wrote 32 -> char:  
    DEBUG root:processor.py:655 PRINT: numeric -> 4
    DEBUG root:processor.py:241 [MMIO OUT] wrote 52 -> char: 4
    DEBUG root:processor.py:241 [MMIO OUT] wrote 10 -> char: 

    DEBUG root:processor.py:409 HALT encountered

      